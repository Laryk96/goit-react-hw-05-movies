{"version":3,"file":"static/js/242.2d4d4c2b.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.jsx","components/LinkWithLocation/LinkWithLocation.styled.jsx","components/LinkWithLocation/LinkWithLocation.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Title/Title.styled.jsx","components/SearchMovie/SearchMovie.styled.jsx","components/SearchMovie/SearchMovie.jsx","services/updateSearchQuery.js","services/notification.js","pages/Movies.jsx","services/ContentLoader.js","services/moviesAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst PopularMovieItem = styled.li`\n  background-color: orange;\n  border-radius: 5px;\n  min-height: 300px;\n  max-width: 300px;\n\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n\n  transition: transform 150ms ease-in;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nconst MovieTitle = styled.p`\n  text-align: center;\n`;\n\nconst Image = styled.img`\n  border-radius: 5px;\n  margin-bottom: 15px;\n  height: 420px;\n`;\nexport { PopularMovieItem, Image, MovieTitle };\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nconst MovieLinkStyle = styled(Link)`\n  width: 100%;\n  height: 100%;\n  padding: 10px;\n\n  color: #212121;\n`;\n\nexport default MovieLinkStyle;\n","import { useLocation } from 'react-router-dom';\nimport MovieLinkStyle from './LinkWithLocation.styled';\n\nconst LinkWithLocation = prop => {\n  const { pathname } = useLocation();\n  const { children } = prop;\n  return (\n    <MovieLinkStyle {...prop} state={{ prevPage: pathname }}>\n      {children}\n    </MovieLinkStyle>\n  );\n};\n\nexport default LinkWithLocation;\n","import { Image, MovieTitle, PopularMovieItem } from './MovieItem.styled';\nimport paths from 'routs/paths';\nimport { generatePath } from 'react-router-dom';\nimport LinkWithLocation from 'components/LinkWithLocation/LinkWithLocation';\n\nconst { movieIDForLink } = paths;\n\nconst MovieItem = ({ movie: { id, title, poster_path, original_name } }) => {\n  return (\n    <PopularMovieItem>\n      <LinkWithLocation to={generatePath(movieIDForLink, { id })}>\n        <Image\n          alt={title}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj'\n          }\n          loading=\"lazy\"\n        />\n        <MovieTitle>{title || original_name}</MovieTitle>\n      </LinkWithLocation>\n    </PopularMovieItem>\n  );\n};\n\nexport default MovieItem;\n","import styled from '@emotion/styled';\n\nconst PopularMovieList = styled.ul`\n  background-color: #212121e3;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n  border-radius: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 25px;\n  margin-bottom: 50px;\n`;\nexport { PopularMovieList };\n","import MovieItem from 'components/MovieItem/MovieItem';\nimport { PopularMovieList } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <PopularMovieList>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </PopularMovieList>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nconst MainTitle = styled.h1`\n  font-size: 40px;\n  margin-bottom: 30px;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport { MainTitle };\n","import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: 600px;\n  height: 150px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n\n  border-radius: 10px;\n  background-color: #212121;\n`;\n\nconst Input = styled.input`\n  margin-bottom: 20px;\n  padding-left: 15px;\n  padding-top: 5px;\n  width: 80%;\n  height: 35px;\n  font-size: 16px;\n  border-radius: 5px;\n  background-color: #f0eeee;\n\n  outline: none;\n  transition: border 150ms ease-in;\n  &:focus,\n  &:hover {\n    border: 2px solid orange;\n  }\n`;\nconst Button = styled.button`\n  width: 100px;\n  height: 32px;\n  font-size: 20px;\n  border-radius: 5px;\n  border: none;\n  transition: background-color 150ms ease-in, transform 150ms ease-in;\n  &:hover {\n    background-color: orange;\n    transform: scale(1.05);\n  }\n`;\n\nexport { Input, Button, Form };\n","import { Button, Form, Input } from './SearchMovie.styled';\n\nconst SearchMovie = ({ onSubmit }) => {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input name=\"search\" type=\"text\" placeholder=\"What will we look for\" />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchMovie;\n","const serializeFormQuery = query => {\n  return query !== '' ? { query } : {};\n};\n\nexport default serializeFormQuery;\n","import Notiflix from 'notiflix';\n\nconst warning = text => {\n  return Notiflix.Notify.warning(text, {\n    position: 'center-top',\n    fontSize: '16px',\n    width: '350px',\n  });\n};\n\nexport { warning };\n","import { useEffect, useState } from 'react';\nimport { getMoviesByName } from 'services/moviesAPI';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\nimport MovieList from 'components/MovieList/MovieList';\nimport { MoviesLoader } from 'services/ContentLoader';\nimport { MainTitle } from 'components/Title/Title.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport serializeFormQuery from 'services/updateSearchQuery';\nimport { warning } from 'services/notification';\n\nconst Loader = () => {\n  return MoviesLoader();\n};\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    setStatus('loading');\n\n    getMoviesByName(searchQuery)\n      .then(({ data }) => {\n        if (data.total_pages <= 1) {\n          setStatus('notFound');\n          return warning(`Sorry we didn't find anything`);\n        }\n        setMovie(data.results);\n        setStatus('found');\n      })\n      .catch(error => {\n        setStatus('error');\n        console.log(error.message);\n      });\n  }, [searchQuery]);\n\n  const handelSubmitForm = event => {\n    event.preventDefault();\n    const query = event.target.elements.search.value;\n\n    if (query === '') {\n      warning('Weare sorry, but  you should enter some name in the search box');\n    }\n\n    const params = serializeFormQuery(query);\n\n    setSearchParams(params);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <>\n      {status === 'fulfilled' && (\n        <>\n          <MainTitle>Loading...</MainTitle>\n          <Loader />\n        </>\n      )}\n      <SearchMovie onSubmit={handelSubmitForm} />\n      {status === 'found' && <MovieList movies={movie} />}\n    </>\n  );\n};\nexport default Movies;\n","import ContentLoader from 'react-content-loader';\n\nconst MoviesLoader = () => {\n  // Get values from props\n  // const { rows, columns, coverHeight, coverWidth, padding, speed } = props;\n\n  // Hardcoded values\n  const rows = 4;\n  const columns = 5;\n  const coverHeight = 300;\n  const coverWidth = 240;\n  const padding = 30;\n  const speed = 1;\n\n  const coverHeightWithPadding = coverHeight + padding;\n  const coverWidthWithPadding = coverWidth + padding;\n  const initial = 35;\n  const covers = Array(columns * rows).fill(1);\n\n  return (\n    <ContentLoader\n      speed={speed}\n      width={columns * coverWidthWithPadding}\n      height={rows * coverHeightWithPadding}\n      backgroundColor=\"#212121\"\n      // primaryColor=\"#242b34\"\n      // secondaryColor=\"#343d4c\"\n    >\n      <rect\n        x=\"0\"\n        y=\"0\"\n        rx=\"0\"\n        ry=\"0\"\n        width={columns * coverWidthWithPadding - padding}\n        height=\"20\"\n      />\n\n      {covers.map((g, i) => {\n        let vy = Math.floor(i / columns) * coverHeightWithPadding + initial;\n        let vx =\n          (i * coverWidthWithPadding) % (columns * coverWidthWithPadding);\n        return (\n          <rect\n            key={i}\n            x={vx}\n            y={vy}\n            rx=\"0\"\n            ry=\"0\"\n            width={coverWidth}\n            height={coverHeight}\n          />\n        );\n      })}\n    </ContentLoader>\n  );\n};\n\nconst MovieLoader = () => {\n  return (\n    <ContentLoader\n      width={1300}\n      height={700}\n      viewBox=\"0 0 700 300\"\n      backgroundColor=\"#212121\"\n      foregroundColor=\"#dbdbdb\"\n    >\n      <rect x=\"4\" y=\"8\" rx=\"3\" ry=\"3\" width=\"7\" height=\"288\" />\n      <rect x=\"6\" y=\"289\" rx=\"3\" ry=\"3\" width=\"669\" height=\"8\" />\n      <rect x=\"670\" y=\"9\" rx=\"3\" ry=\"3\" width=\"6\" height=\"285\" />\n      <rect x=\"55\" y=\"42\" rx=\"16\" ry=\"16\" width=\"274\" height=\"216\" />\n      <rect x=\"412\" y=\"113\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n      <rect x=\"402\" y=\"91\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n      <rect x=\"405\" y=\"139\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n      <rect x=\"416\" y=\"162\" rx=\"3\" ry=\"3\" width=\"102\" height=\"7\" />\n      <rect x=\"405\" y=\"189\" rx=\"3\" ry=\"3\" width=\"178\" height=\"6\" />\n      <rect x=\"5\" y=\"8\" rx=\"3\" ry=\"3\" width=\"669\" height=\"7\" />\n      <rect x=\"406\" y=\"223\" rx=\"14\" ry=\"14\" width=\"72\" height=\"32\" />\n      <rect x=\"505\" y=\"224\" rx=\"14\" ry=\"14\" width=\"72\" height=\"32\" />\n      <rect x=\"376\" y=\"41\" rx=\"3\" ry=\"3\" width=\"231\" height=\"29\" />\n    </ContentLoader>\n  );\n};\n\nexport { MoviesLoader, MovieLoader };\n","import axios from 'axios';\n\nconst API_KEY = 'b1cb6bb9f0fb8b16da0ef0bac91fc5ae';\nconst BASE_URL = `https://api.themoviedb.org/`;\n\nconst getPopularMovies = () =>\n  axios.get(`${BASE_URL}3/trending/all/day?api_key=${API_KEY}`);\n\nconst getMoviesByName = (name, page = 1) =>\n  axios.get(\n    `${BASE_URL}3/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&include_adult=false&query=${name}`\n  );\n\nconst MovieInfoById = id =>\n  axios.get(`${BASE_URL}3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n\nconst getCast = id =>\n  axios.get(\n    `${BASE_URL}3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\nconst getMovieReviews = (id, page = 1) =>\n  axios.get(\n    `${BASE_URL}3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\nexport {\n  getPopularMovies,\n  getMoviesByName,\n  MovieInfoById,\n  getCast,\n  getMovieReviews,\n};\n"],"names":["PopularMovieItem","styled","MovieTitle","Image","Link","prop","pathname","useLocation","children","state","prevPage","movieIDForLink","paths","movie","id","title","poster_path","original_name","to","generatePath","alt","src","loading","PopularMovieList","movies","map","MainTitle","Form","Input","Button","onSubmit","name","type","placeholder","query","warning","text","Notiflix","position","fontSize","width","Loader","MoviesLoader","useSearchParams","searchParams","setSearchParams","searchQuery","get","useState","setMovie","status","setStatus","useEffect","getMoviesByName","then","data","total_pages","results","catch","error","console","log","message","event","preventDefault","target","elements","search","value","params","serializeFormQuery","currentTarget","reset","MovieList","coverWidthWithPadding","coverWidth","covers","Array","columns","fill","speed","height","rows","backgroundColor","x","y","rx","ry","g","i","vy","coverHeight","Math","floor","vx","MovieLoader","viewBox","foregroundColor","API_KEY","BASE_URL","getPopularMovies","axios","page","MovieInfoById","getCast","getMovieReviews"],"sourceRoot":""}